@page "/inventory"

@using ValheimCharacterForge
@using ValheimCharacterForge.Models
@using ValheimCharacterForge.Classes
@using System.Linq
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IToastService toastService
@inject CharacterSingeton CharService

@if (CharService.Character is not null)
{
    <header>
        <div class="container-fluid p-3 text-center page-header">
            <h1>Inventory Data </h1>
            <div class="row inner-center text-center no-print">
                <button class="btn btn-info" @onclick="@(() => {navigationManager.NavigateTo("/inventory/add");})">Add Item</button>
            </div>
        </div>
    </header>

    <div class="col-lg" style="margin-bottom:20px;text-align:center">
        <div class="table-responsive" style="padding-right: 4px">
            <table class="table table-sm table-hover table-striped cam-table">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Position</th>
                        <th scope="col">Equipped?</th>
                        <th scope="col">Stack Quantity</th>
                        <th scope="col">Quality</th>
                        <th scope="col">Durability</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in CharService.Character.Data.Inventory)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@item.Pos</td>
                            <td>@item.Equipped</td>
                            <td><input type="number" class="form-control" @bind-value="@item.Stack" /></td>
                            <td><input type="number" class="form-control" @bind-value="@item.Quality" /></td>
                            <td><input type="number" class="form-control" @bind-value="@item.Durability" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
}
else
{
    <p style="text-align:center">Please load a character on the main screen first.</p>
}

<style>
    .control-section.multiline {
        margin-top: 20px;
    }

    .wrapper {
        width: 45%;
        margin-left: 200px;
    }

    .selectionText {
        margin: 10px;
        width: 100px;
        font-size: 13px;
    }

    .e-grid td.e-active {
        background-color: rgba(0, 255, 255, 0.55);
    }

    .apply-limit {
        margin-top: 10px;
    }

    .control-label {
        padding: 24px 0px 10px 0px;
        font-size: 12px;
    }

    .property {
        padding-left: 10px;
        padding-bottom: 20px;
        font-weight: 600;
        font-size: 15px;
    }

    .e-edit:before {
        content: '\e78f';
        font-size: x-large;
    }

    .link-outline-primary {
        color: blue;
        border-color: blue;
        border: 1px solid blue;
        transition: .5s;
        background-color: white;
    }

        .link-outline-primary:hover {
            color: lightgray;
            background-color: #1b6ec2;
            border-color: blue;
            border: 1px solid blue;
            transition: .5s;
            font-weight: bold;
        }
</style>

@code {
    bool IsSaving = false;


    [Parameter] public string ID { get; set; }
    string _id;

    protected override async void OnParametersSet()
    {
        try
        {
            _id = ID;

            await Task.Run(() => LoadPageDetails().ConfigureAwait(false));

        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                toastService.ShowError(ex.InnerException.Message, "Error");
            }
            else
            {
                toastService.ShowError(ex.Message, "Error");
            }
        }
    }

    async Task LoadPageDetails()
    {


    }

}